{
  "about": {
    "intro": {
      "title": {
        "1": "Bumang!",
        "2": "The Creative Developer"
      },
      "desc": "안녕하세요. Creative Developer, 버망입니다. 저는 학부 때는 산업디자인을 전공했고, UX/UI 디자이너로 커리어를 시작하여, 현재는 프론트엔드 개발자로 일하고 있습니다. 디지털 제품 경험의 A부터 Z까지 섬세하게 깎는 과정에서 재미를 느끼다보니 이런 커리어 패스를 밟아왔네요. 이 모든 과정에 모두 관여하고 싶은 니즈로 인해 풀스택 개발자로 성장해가고 있습니다. 그러나 저는 여전히 예술에 많은 관심이 있습니다. 특히 그림을 그리거나 멋진 그래픽을 만드는 것을 즐기죠. 현재는 인터랙티브한 2D/3D 콘텐츠를 만드는 것에 관심이 많으며, 개인 개발 프로젝트를 진행하며 새로운 기술을 실험해보는 것을 즐깁니다. 흥미로운 사이드 프로젝트 아이디어는 언제나 환영이니 맘껏 알려주세요!"
    },
    "record": {
      "2024": {
        "title": "BlockS",
        "desc": "프론트엔드 개발자 근무"
      },
      "2023": {
        "title": "야놀자 테크 스쿨 프론트엔드 과정",
        "desc": "우수졸업생"
      },
      "2022": {
        "title": "네이버 부스트코스 Python 코칭 스터디",
        "desc": "리드 부스터"
      },
      "2021": {
        "title": "카카오 x 한국관광공사 여행데이터 공모전",
        "desc": "최우수상 - UX디자이너로서 참여"
      },
      "2019": {
        "title": "서울시립대학교 장산곶매 마스코트 캐릭터디자인 공모전",
        "desc": "우수상"
      }
    },
    "techStack": {
      "webFrontEnd": {
        "1": {
          "title": "React/Next.js",
          "desc": "SPA 라이브러리/프레임워크"
        },
        "2": {
          "title": "Tailwind, StyledComponents",
          "desc": "스타일링"
        },
        "3": {
          "title": "React-Hook-Form, Zod",
          "desc": "스키마 유효성 검증"
        },
        "4": {
          "title": "Axios, TanstackQuery",
          "desc": "서버 호출 캐싱"
        },
        "5": {
          "title": "Zustand, ReduxToolkit",
          "desc": "전역 상태 관리"
        },
        "6": {
          "title": "Gsap, Three.js, Motion",
          "desc": "인터랙티브/애니메이션"
        }
      },
      "appFrontEnd": {
        "1": {
          "title": "React Native",
          "desc": "크로스플랫폼 프레임워크"
        },
        "2": {
          "title": "StyleSheet",
          "desc": "스타일링"
        },
        "3": {
          "title": "React Native Codepush",
          "desc": "핫픽스 업데이트"
        },
        "4": {
          "title": "React Native Firebase FCM",
          "desc": "푸시 알림"
        },
        "5": {
          "title": "React Native Reanimated",
          "desc": "인터랙티브/애니메이션"
        }
      },
      "backend": {
        "1": {
          "title": "express.js, Nest.js",
          "desc": "백엔드 프레임워크"
        },
        "2": {
          "title": "Firebase",
          "desc": "백엔드 서비스 (BaaS)"
        },
        "3": {
          "title": "PostgresQL, MongoDB",
          "desc": "데이터베이스"
        },
        "4": {
          "title": "TypeORM",
          "desc": "ORM"
        },
        "5": {
          "title": "AWS EC2",
          "desc": "가상 클라우드 서버"
        },
        "6": {
          "title": "AWS S3",
          "desc": "가상 파일 저장소"
        }
      },
      "cicd": {
        "1": {
          "title": "Git, Github",
          "desc": "분산 버전 관리 & 협업"
        },
        "2": {
          "title": "Github Action",
          "desc": "CI/CD 자동화"
        },
        "3": {
          "title": "Docker, DockerCompose",
          "desc": "컨테이너 가상화 도구"
        }
      },
      "design": {
        "1": {
          "title": "Figma",
          "desc": "UX/UI 작업"
        },
        "2": {
          "title": "Photoshop, Illustration",
          "desc": "그래픽 디자인"
        },
        "3": {
          "title": "After Effect",
          "desc": "모션그래픽"
        },
        "4": {
          "title": "UG NX, Keyshot",
          "desc": "3D 모델링 & 렌더링"
        },
        "5": {
          "title": "ClipStudio, ProCreate(iPad)",
          "desc": "아트 & 일러스트레이션"
        }
      },
      "basicLevel": {
        "1": {
          "title": "SCSS",
          "desc": "스타일링"
        },
        "2": {
          "title": "Redux-Tookit, Jotai",
          "desc": "전역 상태 관리"
        },
        "3": {
          "title": "P5.js, Phaser3.js",
          "desc": "인터랙티브 개발"
        },
        "4": {
          "title": "Blender, Cinema4D",
          "desc": "3D 모델링 & 모션그래픽"
        }
      }
    }
  },
  "work": {
    "bumangRoute53": {
      "tag": "사이드 프로젝트",
      "projectScale": "개인 프로젝트",
      "role": "풀스택",
      "desc": "개인 블로그 & 포트폴리오",
      "1": {
        "title": "블로그 애플리케이션을 위한 Nest.js 백엔드 구축",
        "a": {
          "title": "블로그 CRUD 기능 구현",
          "i": "Postgresql을 활용한 관계형 DB 내 유저 - 포스트 - 카테고리 - 그룹 관계 설정",
          "ii": "점수 기반 관련성 알고리즘을 기반으로 관련 게시물 추천 API 개발",
          "iii": "블로그 편집 중 이미지를 삽입하거나, 썸네일 이미지로 등록하는 과정 구현. 버퍼가 큰 이미지는 클라이언트가 직접 S3로 업로드하도록 presigned URL을 제공."
        },
        "b": {
          "title": "Docker 및 AWS EC2 배포를 위한 CI/CD 최적화",
          "i": "Docker Compose를 사용하여 Nest.js 앱과 PostgreSQL 데이터베이스를 컨테이너화하고 Docker 이미지를 통해 배포",
          "ii": "GitHub Actions으로 자동 배포: EC2에 SSH 접속, 최신 Docker 이미지 pull, 컨테이너 재시작 등을 자동화",
          "iii": "배포 시 오래된 Docker 이미지 캐시 제거, 최신 3개 이미지만 유지하도록 설정"
        },
        "c": {
          "title": "역할 기반 접근 제어",
          "i": "운영자인 '어드민', 포스트 올리기 체험 및 일부 비공개글을 읽을 수 있는 '유저', 비로그인 상태인 '퍼블릭', 이렇게 3개의 권한이 존재",
          "ii": "Guards와 커스텀 Decorators를 사용하여 인증 및 권한 부여 추상화",
          "iii": "cron 스케줄링 작업으로 '어드민'이 올리지 않은 포스트는 24시간에 한 번 꼴로 삭제 정리됨."
        }
      },
      "2": {
        "title": "인증/인가에 따라 서버컴포넌트와 클라이언트 컴포넌트의 관심사 분리",
        "a": {
          "i": "SEO가 중요한 데이터이며 public한 데이터는 서버 컴포넌트에서 처리.",
          "ii": "인증/인가가 필요한 데이터면 되도록 클라이언트 컴포넌트 내에서 httpOnly 쿠키와 함께 패칭하도록 유도.",
          "iii": "만약 비공개 글일 경우, 서버컴포넌트에서 토큰없이 호출 후 일차적으로 401에러가 반환되면, 클라이언트 컴포넌트에서 인증정보를 가지고 다시 패칭을 하는 구조 설정",
          "iv": "JWT 전략 상 엑세스토큰 주기를 짧게 설정하기 때문에, 토큰 만료 시 재발급 받아오는 과정이 필연적으로 필요함.",
          "v": "그러나 서버컴포넌트에서 재발급 처리 시 httpOnly쿠키가 브라우저에 자동으로 심어지지 않음. (요청자가 브라우저가 아니기 때문) 그래서 서버사이드에서 다시 브라우저에 심어주는 과정이 필요.",
          "vi": "서버사이드에서 인증 관리 시 위와 같은 번거로움이 발생하므로 인증 관리는 클라이언트 컴포넌트에 일임. 관심사 분리 결정"
        }
      },
      "3": {
        "title": "인터랙티브 애니메이션 라이브러리와 Headless UI를 결합하여 고품질 컴포넌트 구축",
        "a": "풍부한 테일윈드 기반 HeadlessUI 생태계 활용",
        "b": "기본적인 컬러, borderRadius, fontSize 규칙을 정해 디자인 통일성을 유지",
        "c": "이 서비스에 필요한 복합적인 기능 컴포넌트도 헤드리스 UI들을 조합하여 합성하여 생성"
      },
      "4": "i18n(국제화) 및 다크 모드와 같은 유틸리티 기능 구현"
    },
    "seaPearl": {
      "tag": "업무 프로젝트",
      "projectScale": "팀 프로젝트",
      "role": "전담 프론트엔드 개발자",
      "desc": "텔레그램 미니앱 탭 게임",
      "1": {
        "title": "텔레그램 내 웹뷰 기반 프론트엔드를 사용하여 초기 제품을 개발 및 배포",
        "a": "ngrok을 사용하여 텔레그램 개발 환경을 구성하고, 개발과 배포 모두에 활용",
        "b": {
          "title": "텔레그램 미니 앱 iframe 환경에서 웹뷰 배포",
          "i": "텔레그램 미니 앱 글로벌 브라우저 API를 사용하여 사용자 인증 데이터를 가져오는 초기화 로직 구현",
          "ii": "로컬 개발환경을 ngrok으로 배포하여 텔레그램에 연동, 텔레그램 API를 이용할 수 있는 개발환경 구축"
        }
      },
      "2": {
        "title": "인앱 광고를 위한 Adsgram SDK 설치",
        "a": "Adsgram 서버로부터 성공/실패 결과를 받아 백엔드 API 서버로 전달하는 로직 구현",
        "b": "사용자가 광고를 건너뛰거나, 앱을 백그라운드로 보내거나, 앱 관리자 화면에 머물러 있을 경우 광고 시청을 실패로 처리"
      },
      "3": {
        "title": "react-virtuoso를 사용한 가상화된 리스트 구축",
        "a": "뷰포트 이내에 올라와야지만 렌더될 수 있도록 처리하여 성능 개선, 긴 리스트 대응."
      },
      "4": {
        "title": "디바운스와 글로벌 캐싱을 사용하여 탭핑 게임의 API 호출 최적화, 비용 효율성과 보안의 균형을 맞춤",
        "a": {
          "title": "탭핑 횟수를 디바운스로 집계하여 마지막 탭 후 3초 뒤 서버로 전송",
          "i": "사용자가 3초 이내에 화면을 나갈 경우, useEffect cleanup 함수를 사용하여 언마운트 전 서버 업데이트 보장",
          "ii": "탭 카운트를 지속적인 글로벌 상태로 만들어 앱 재시작 시 예상치 못한 종료 후에도 서버로 카운트가 전송되도록 함",
          "iii": "글로벌 상태 업데이트 함수에서 서버 패칭과 상태 클리어를 결합하여 예상치 못한 오류 발생 시 원래 상태가 그대로 유지되도록 함"
        }
      },
      "5": {
        "title": "고급 인터랙티브 탭핑 애니메이션",
        "a": {
          "title": "탭핑 횟수를 디바운스로 집계하여 마지막 탭 후 3초 뒤 서버로 전송",
          "i": "재화 획득 시 이펙트에 기본 부스트 + 업그레이드 상황 + 부스트 여부를 반영하여 색상과 크기가 바뀌도록 설정"
        }
      }
    },
    "anttimeSwap": {
      "tag": "업무 프로젝트",
      "projectScale": "팀 프로젝트",
      "role": "프론트엔드 전담 개발자",
      "desc": "포인트 토큰 교환 에어드롭 플랫폼",
      "1": {
        "title": "React 서버 컴포넌트와 클라이언트 컴포넌트 활용 전략 수립",
        "a": "서버 사이드에서 토큰 스왑 기간 메타데이터를 가져와 접근 제어 관리",
        "b": "권한이나 타이밍 기반의 인증 로직을 클라이언트 사이드 코드에 노출하지 않아 보안 강화",
        "c": "렌더링 요구사항에 따라 서버 컴포넌트(SEO 중요 페이지 등)와 클라이언트 컴포넌트의 명확한 사용 사례 정의"
      },
      "2": {
        "title": "TanStack Query의 useSuspenseQuery와 Suspense, ErrorBoundary를 활용한 상태별 관심사 분리",
        "a": "Suspense와 ErrorBoundary를 사용하여 로딩/에러 상태를 격리하고 컴포넌트 복잡성 감소",
        "b": "API 요청 블로킹을 최소화하는 아키텍처 설계",
        "c": "비동기 로딩 중 스켈레톤 로더로 UX 개선",
        "d": "SSR 환경에서 클라이언트 사이드 의존성이 필요한 컴포넌트를 위해 Suspensive 라이브러리의 ClientOnly 옵션 사용"
      },
      "3": {
        "title": "WAGMI를 사용한 Web3 지갑 연결 및 트랜잭션 처리 구현",
        "a": "MetaMask와 WalletConnect 등 주요 지갑 연결 및 지갑 정보 가져오기",
        "b": "스마트 컨트랙트 상호작용을 통한 토큰 스왑 활성화"
      },
      "4": {
        "title": "GSAP을 사용한 순차적 '점수 평가' 애니메이션 생성",
        "a": "useContext를 사용하여 컴포넌트 간 애니메이션 타이밍 상태 공유"
      }
    },
    "anttimeApp": {
      "tag": "업무 프로젝트",
      "projectScale": "팀 프로젝트",
      "role": "프론트엔드 개발자",
      "desc": "크로스플랫폼 포인트 채굴 앱",
      "1": {
        "title": "프로덕션과 개발 환경 분리",
        "a": {
          "title": "네이티브 빌드 구성을 개발/프로덕션 환경으로 분리",
          "i": "각 개발 환경에 대해 Firestore 설정 및 그에 맞는 환경 변수 파일 구성",
          "ii": "iOS용 Xcode 빌드 schema과 Android용 Android flavor를 통한 테스트/상용 앱 config 설정 분기"
        }
      },
      "2": {
        "title": "React Native 버전 업데이트",
        "a": "오래된 RN 버전 때문에 서드파티 라이브러리 지원이 중단되는 상황을 개선하기 위해 버전 업그레이드 결정",
        "b": "React Native Upgrade Helper를 사용하여 0.68에서 0.74로 업그레이드하고 그에 맞게 네이티브 코드 수정 (Flipper 제거, Fabric 구성, iOS/Android 메타데이터 업데이트)",
        "c": "새로운 RN 버전에 맞게 서드파티 라이브러리 버전도 업데이트"
      },
      "3": {
        "title": "Google Play Store Referral API를 사용한 딥링크 구현",
        "a": "사용자의 운영체제에 따라 적절한 스토어 링크로 리디렉션하는 딥링크 개발",
        "b": "레퍼럴 링크 내 쿼리를 통해 앱 진입 시 추천인 코드 자동 입력",
        "c": "Firebase Dynamic Links의 지원 중단으로 인해 Google Play Store Referral API를 사용하여 추천인 코드와 함께 딥링크 통합 완료"
      },
      "4": {
        "title": "애니메이션 작업 스킨 업데이트",
        "a": {
          "title": "사용자가 앱 내 화폐를 사용하여 개별 신체 부위 스킨을 구매할 수 있는 페이지 개발",
          "i": "사용자 신체 부위 데이터를 가져와 동적으로 스킨 애니메이션 및 부위 교체를 업데이트하는 기능 구현",
          "ii": "주요 공휴일 및 연휴에 맞춘 시즌 스킨 출시"
        },
        "b": {
          "title": "React Native Reanimated를 사용한 복잡한 채굴 애니메이션",
          "i": "기존 채굴 애니메이션은 미리 정의된 복장의 캐릭터로 하나의 고정 애니메이션을 재생하는 Lottie로 구현되었습니다. 스킨 업데이트를 지원하기 위해 애니메이션을 개별 부위로 분리해야 했습니다",
          "ii": "react-native-reanimated를 사용하여 각 부위에 대한 애니메이션 타임라인을 생성하고 매끄럽고 조화로운 재생 구현"
        }
      }
    },
    "percentHotel": {
      "tag": {
        "1": "야놀자 부트캠프",
        "2": "전체 2등 (12팀 중)"
      },
      "projectScale": "팀 프로젝트",
      "role": "프론트엔드 리더",
      "desc": "숙박 매물 양도 플랫폼",
      "1": {
        "title": "커스텀 애니메이션 캐러셀 라이브러리",
        "a": {
          "title": "슬라이드 애니메이션 구현",
          "i": "1차 이체 가격, 2차 가격 구성 상태, 2차 가격 타이밍, 2차 가격 값, 은행 계좌 등록 상태, 야놀자 인증, 약관 동의 상태 등 다양한 비즈니스 규칙을 기반으로 사용자가 다음 단계로 진행할 수 있는지 판단하는 커스텀 훅 개발",
          "ii": "마우스다운과 마우스업 pageX 값의 차이를 계산하여 스와이프 방향을 결정하고, 차이가 특정 임계값을 초과하면 캐러셀이 다음 슬라이드로 진행하도록 구현",
          "iii": "useEffect와 setInterval을 사용하여 3초마다 실행되는 무한 슬라이드 애니메이션을 생성하고, mouseenter와 mouseleave 이벤트를 사용하여 애니메이션을 일시정지/재개. 메모리 누수를 방지하기 위해 페이지 언마운트 시 인터벌 정리"
        },
        "b": {
          "title": "모바일과 데스크톱에서 일관된 사용자 경험 제공",
          "i": "TouchEvent와 MouseEvent를 모두 지원하여 모바일과 데스크톱 환경에서 드래그 기능 활성화",
          "ii": "터치 이벤트가 감지되면 마우스 이벤트를 취소하여 의도하지 않은 클릭 방지"
        }
      },
      "2": {
        "title": "커스텀 훅을 사용한 복잡한 비즈니스 로직 처리",
        "a": {
          "title": "커스텀 훅을 사용하여 복잡한 비즈니스 로직 예외 처리",
          "i": "1차 이체 가격, 2차 가격 구성 상태, 2차 가격 타이밍, 2차 가격 값, 은행 계좌 등록 상태, 야놀자 인증, 약관 동의 상태 등 다양한 비즈니스 규칙을 기반으로 사용자가 다음 단계로 진행할 수 있는지 판단하는 커스텀 훅 개발"
        },
        "b": {
          "title": "결제 수단이 없을 경우 결제 수단 등록 페이지로 리디렉션하면서 돌아올 때 폼 상태 보존",
          "i": "은행 계좌가 아직 등록되지 않은 경우 페이지를 이동하는 대신 같은 페이지 내에서 결제 수단 등록 컴포넌트로 전환하여 사용자 입력을 보존하는 플로우 구현. 이를 통해 이전에 입력한 모든 상태가 그대로 유지됨",
          "ii": "돌아올 때 내부 상태는 유지되었지만 일부 브라우저 제어 요소(체크박스 체크 상태 등)가 시각적으로 리셋되는 문제 발생. 컴포넌트 전환 시 현재 상태를 기반으로 UI 일관성을 복원하는 훅을 생성하여 해결"
        }
      },
      "3": {
        "title": "푸시 알림을 위한 Firebase Cloud Messaging(FCM) 구현",
        "a": "로그인 시 FCM 토큰을 초기화하는 커스텀 훅 생성",
        "b": "Firebase 서비스 워커를 통해 백그라운드 푸시 알림 수신",
        "c": "Android, iOS, 웹, PWA 환경에서 푸시 알림 테스트"
      },
      "4": {
        "title": "React 애플리케이션에서 SEO 최적화",
        "a": "React Helmet과 React Snap을 사용한 사전 렌더링 구현",
        "b": "최적화 후 Lighthouse SEO 점수를 77에서 100으로 향상"
      },
      "5": {
        "title": "팀 운영 리더십",
        "a": "아침 스탠드업 미팅을 통한 일일 진행 상황 공유",
        "b": {
          "title": "병합 전 전체 팀 코드 리뷰 필수화",
          "i": "'수고했습니다' 같은 댓글은 지양하고, 리뷰어는 코드를 꼼꼼히 읽은 후 의미 있는 피드백을 남기도록 함"
        },
        "c": {
          "title": "프로젝트 중간에 두 명의 팀원이 취업 면접 준비를 위해 팀을 떠나면서 팀 사기에 영향을 준 상황 처리",
          "i": "떠나는 멤버들에게 연락하여 어떤 기능을 작업하고 있었는지, 미완성된 것은 무엇인지 파악한 후 남은 팀원들에게 작업 재분배",
          "ii": "개발 동력을 유지하기 위해 철저한 코드 리뷰에 집중하고 PR 제출 후 3시간 내 피드백을 주는 문화 구축. 좋은 작업에 대한 긍정적 강화도 강조",
          "iii": "결과적으로 가장 생산적인 팀원 중 한 명이 프로젝트 회고에서 지지적인 팀 문화가 끝까지 동기부여를 유지하는 데 도움이 되었다고 언급"
        }
      }
    }
  },
  "login": {
    "title": "안녕하세요!",
    "desc": "로그인 하시고 모든 Bumang Route53의 기능을 체험해보세요.",
    "idLabel": "아이디",
    "passwordLabel": "패스워드",
    "tooltips": {
      "perk": {
        "title": "🧩 로그인해서 얻을 수 있는 이점이 정확히 뭐죠?",
        "desc1": "버망의 모든 비공개글과 아트웍을 감상하실 수 있어요.",
        "desc2": "글쓰기를 체험해보실 수 있어요.",
        "desc3": "혹은 그냥 제 AWS 비용을 늘리실 수 있어요🤣",
        "hint": {
          "1": "일반 계정으로 쓴 체험 글은 비공개글로만 작성 가능하며, 게시 이후 24시간 이후 삭제됩니다."
        }
      },
      "signUp": {
        "title": "📬 회원가입 어떻게 하죠?",
        "1": "버망에게 개인적으로 생성하길 원하시는 아이디/비밀번호를 알려주시면 만들어드려요.",
        "2": "단, 평소 자주 사용하시는 아이디/비밀번호 말고 다른 것을 알려주세요! - 그게 서로에게 좋아요 😘"
      }
    },
    "error": {
      "noUser": "아이디 혹은 비밀번호가 올바르지 않아요."
    }
  },
  "blogEdit": {
    "titlePlaceHolder": "여기에 제목을 입력하세요...",
    "contentPlaceHolder": "'/'을 눌러 액션 메뉴 표출",
    "header": {
      "backToList": "목록으로 돌아가기",
      "selectGroup": {
        "button": "그룹 선택",
        "inputPlaceHolder": "그룹을 검색하세요."
      },
      "selectCategory": {
        "button": "카테고리 선택",
        "innerLabel": "그룹을 먼저 선택해주세요.",
        "inputPlaceHolder": "카테고리를 검색하세요."
      },
      "addTags": {
        "button": "태그 추가하기",
        "selectedTags": "선택된 태그 목록",
        "noTags": "선택 가능한 태그가 없습니다.",
        "inputPlaceHolder": "태그를 검색하세요."
      }
    },
    "draft": {
      "button": "임시저장",
      "innerLabel": "임시저장목록",
      "status": {
        "saving": "저장중...",
        "authChecking": "인증 체크 중...",
        "none": ""
      },
      "addNewDraft": "새로운 임시저장 내역 추가하기",
      "noTitle": "제목 없음",
      "noDesc": "본문 없음",
      "noGroup": "그룹 미선택",
      "noCategory": "카테고리 미선택",
      "noDraft": "임시저장이 없습니다.",
      "modals": {
        "load": {
          "title": "정말 이 임시저장을 블러오시겠어요?",
          "desc": "현재까지의 작업사항이 일부 없어질 수 있어요."
        },
        "overWrite": {
          "title": "정말 이 임시저장에\n현재 작성한 내용을 덮어쓰시겠어요?",
          "desc": "현재 내용으로 덮어 쓴 다음에 현재 편집되고있는 임시저장으로 선택돼요."
        }
      }
    },
    "publish": {
      "button": {
        "publish": "게시하기",
        "update": "수정하기"
      },
      "title": "게시 준비",
      "desc": "포스티 게시 전에 아래 설정들을 완료하세요.",
      "noTitle": "제목 없음",
      "noDesc": "본문 없음",
      "noGroup": "그룹 미선택",
      "noCategory": "카테고리 미선택",
      "noImage": "기본 썸네일을 쓰려면 그룹을 먼저 선택하셔야 합니다.",
      "readPermission": {
        "label": "읽기 권한",
        "types": {
          "public": "전체 공개",
          "loggedInUser": "로그인유저만",
          "admin": "관리자만"
        },
        "userOnly": "유저는 유저 공개글만 게시할 수 있습니다."
      },
      "submit": "게시하기",
      "cancel": "취소"
    }
  },
  "blog": {
    "noCategory": "카테고리 없음",
    "noGroup": "그룹 없음",
    "noPost": {
      "title": "죄송합니다. 포스트를 찾을 수 없어요.",
      "desc": "일시적인 에러거나, 아직 이 주제에 대해 포스트가 없어요."
    }
  },
  "blogDetail": {
    "noTag": "태그 없음",
    "edit": "수정",
    "delete": "삭제",
    "nextPost": "다음 포스트",
    "prevPost": "이전 포스트",
    "relatedPost": "연관 포스트",
    "noRelatedPost": {
      "title": "이 아티클과 연관있는 포스트가 아직 없습니다.",
      "desc": "아마 버망이 곧 관련있는 주제로 글을 쓸거에요."
    }
  },
  "alert": {
    "noPermission": {
      "title": "이런, 권한이 부족해요.",
      "desc": "이 글을 보려면 이 권한이 필요해요: ",
      "buttonText": "로그인 하러가기",
      "ariaLabel": "로그인이 필요해요."
    }
  }
}
